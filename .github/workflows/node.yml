name: NodeJS with Webpack

on:
  workflow_dispatch:
    inputs:
      deployTo:
        type: choice
        description: "Environment to deploy to"
        options:
          - "dev"
          - "prod"
        default: "dev"
  push:
    branches: [ "main" ]

jobs:
  build:
    environment: web
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_URL: https://sen.kaytu.dev/
      SENTRY_ORG: sentry
      SENTRY_PROJECT: kaytu-app

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        
    - name: GitHub Tag
      id : tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUBCI_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    - uses: docker/login-action@v2
      with:
        registry: ${{ vars.DOCKER_REGISTRY }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ vars.DOCKER_REGISTRY }}/kaytu-frontend:${{ steps.tag_version.outputs.new_tag }}
          ${{ vars.DOCKER_REGISTRY }}/kaytu-frontend:${{ github.event.inputs.deployTo == '' && 'dev' || github.event.inputs.deployTo }}-${{ steps.tag_version.outputs.new_tag }}
        build-args: |
          APP_VERSION=${{ steps.tag_version.outputs.new_tag }}
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
        file: deploy/Dockerfile
        cache-from: type=gha
        cache-to: type=gha,mode=max
