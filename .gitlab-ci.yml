stages:
  - build-project
  - build-image

build-project:
  stage: build-project
  image: node:18-alpine
  scripts:
    - npm install
    - npm run build
    - cp build build

build-image:
  stage: bbuild-image
  image: docker
  image: docker:latest
  services: 
    - name: docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" ./deploy
    - docker push "$CI_REGISTRY_IMAGE"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
